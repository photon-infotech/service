<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<modules xmlns="http://www.example.org/Phresco">
    <module id="mod_androidannotations_2.1.2" name="AndroidAnnotations" version="2.1.2" core="true" required="false" groupId="modules.tech-android-native.files" artifactId="mod_androidannotations_2.1.2">
        <contentURL>/modules/tech-android-native/files/mod_androidannotations_2.1.2/2.1.2/mod_androidannotations_2.1.2-2.1.2.jar</contentURL>
		<imageUrl>images/tech-android-native/AndroidAnnotations.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>AndroidAnnotations works in a very simple way. It automatically adds an extra compilation step that generates source code, using the standard Java Annotation Processing tool.</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>Andriod annotations is a complite time framework helps user to avoid writing huge block of code.</content>
            </document>
        </documents>
    </module>
    <module id="mod_simplexml_2.6.1" name="SimpleXML" version="2.6.1" core="true" required="false" groupId="modules.tech-android-native.files" artifactId="mod_simplexml_2.6.1">
        <contentURL>/modules/tech-android-native/files/mod_simplexml_2.6.1/2.6.1/mod_simplexml_2.6.1-2.6.1.jar</contentURL>
		<imageUrl>images/tech-android-native/SimpleXML.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>Simple is a high performance XML serialization and configuration framework for Java. Its goal is to provide an XML framework that enables rapid development of XML configuration and communication systems. This framework aids the development of XML systems with minimal effort and reduced errors. It offers full object serialization and deserialization, maintaining each reference encountered. In essence it is similar to C# XML serialization for the Java platform, but offers additional features for interception and manipulation.</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>Simple XML is a framework for Java, which enables rapid development of XML configuration and communication systems.</content>
            </document>
        </documents>
    </module>
    <module id="mod_googlegson_2.2.1" name="GoogleGSON" version="2.2.1" core="true" required="false" groupId="com.google.code.gson" artifactId="gson">
        <contentURL>/modules/tech-android-native/files/mod_googlegson_2.2.1/2.2.1/mod_googlegson_2.2.1-2.2.1.jar</contentURL>
		<imageUrl>images/tech-android-native/GoogleGSON.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>Gson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent Java object. Gson can work with arbitrary Java objects including pre-existing objects that you do not have source-code of

</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>Google GSON is a Java library that can be used to convert Java Objects into their JSON representation and vice-versa.</content>
            </document>
        </documents>
    </module>
	
	<module id="mod_googlegson_2.2.2" name="GoogleGSON" version="2.2.2" core="true" required="false" groupId="com.google.code.gson" artifactId="gson">
	<contentURL>/modules/tech-android-native/files/mod_googlegson_2.2.2/2.2.2/mod_googlegson_2.2.2-2.2.2.jar</contentURL>
	<imageUrl>images/tech-android-native/GoogleGSON.png</imageUrl>
	<documents>
		<document documentType="HELP_TEXT">
			<content>Gson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON 	string to an equivalent Java object. Gson can work with arbitrary Java objects including pre-existing objects that you do not have source-code of
			</content>
		</document>
		<document documentType="DESCRIPTION">
			<content>Google GSON is a Java library that can be used to convert Java Objects into their JSON representation and vice-versa.
			</content>
		</document>
	</documents>
	</module>
	
    <module id="mod_ormlite_4.41" name="ORMLite" version="4.41" core="true" required="false" groupId="com.j256.ormlite" artifactId="ormlite-core">
        <contentURL>/modules/tech-android-native/files/mod_ormlite_4.41/4.41/mod_ormlite_4.41-4.41.jar</contentURL>
		<imageUrl>images/tech-android-native/ORMLite.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>Object Relational Mapping Lite (ORM Lite) provides some lightweight functionality for persisting Java objects to SQL databases while avoiding the complexity and overhead of more standard ORM packages.

ORMLite supports JDBC connections to MySQL, PostgreSQL, Microsoft SQL Server, H2 [free SQL database written in Java], Derby, HSQLDB, and SQLite and can be extended to additional databases relatively easily. There are also initial implementations for DB2 and Oracle. It has a separate database backend which also supports native database calls on Android OS. You can contact the author of ORMLite if your database is not supported.</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>ORMLite is an open source software framework that provides lightweight object relational mapping (ORM) between Java classes and SQL databases.</content>
            </document>
        </documents>
    </module>
    <module id="mod_jackcess_1.2.7" name="Jackcess" version="1.2.7" core="true" required="false" groupId="com.healthmarketscience.jackcess" artifactId="jackcess">
        <contentURL>/modules/tech-android-native/files/mod_jackcess_1.2.7/1.2.7/mod_jackcess_1.2.7-1.2.7.jar</contentURL>
		<imageUrl>images/tech-android-native/Jackcess.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>Jackcess is a pure Java library for reading from and writing to MS Access databases (currently supporting versions 2000-2007).It is part of the OpenHMS project from Health Market Science, Inc.. It is not an application. There is no GUI. It's a library, intended for other developers to use to build Java applications. Jackcess is licensed under the GNU Lesser General Public License</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>Jackcess is a pure Java library for reading from and writing to MS Access databases.</content>
            </document>
        </documents>
    </module>
    <module id="mod_twitter4j_2.1.0" name="Twitter4J" version="2.1.0" core="true" required="false" groupId="net.homeip.yusuke" artifactId="twitter4j-core">
        <contentURL>/modules/tech-android-native/files/mod_twitter4j_2.1.0/2.1.0/mod_twitter4j_2.1.0-2.1.0.jar</contentURL>
		<imageUrl>images/tech-android-native/Twitter4J.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>Twitter4J is an unofficial Java library for the Twitter API. With Twitter4J, you can easily integrate your Java application with the Twitter service.

Twitter4J  feature:
1. 100% Pure Java - works on any Java Platform version 1.4.2 or later
2. Zero dependency : No additional jars required

</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>Twitter4J is an open-sourced, mavenized safe Java library for the Twitter API. Twitter4J allows you to easily integrate your application with the Twitter service.</content>
            </document>
        </documents>
    </module>
    <module id="mod_facebook_3.0.4" name="Facebook" version="3.0.4" core="true" required="false" groupId="com.google.code.facebookapi" artifactId="facebook-java-api-schema">
        <contentURL>/modules/tech-android-native/files/mod_facebook_3.0.4/3.0.4/mod_facebook_3.0.4-3.0.4.jar</contentURL>
		<imageUrl>images/tech-android-native/Facebook.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>Facebook is a reference library project, which user need to add to their native application.facebook features like login to facebook, post on wall, etc from their own android application

Note: jar file is created for this reference library project, but the suggested way to use facebook is, to include the library project.</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>Facebook SDK allows integrating the facebook functionalities with android applications.</content>
            </document>
        </documents>
    </module>
    <module id="mod_adcolony_1.0" name="AdColony" version="1.0" core="true" required="false" groupId="modules.tech-android-native.files" artifactId="mod_adcolony_1.0">
        <contentURL>/modules/tech-android-native/files/mod_adcolony_1.0/1.0/mod_adcolony_1.0-1.0.jar</contentURL>
		<imageUrl>images/tech-android-native/AdColony.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>AdColony helps to create  high-definition (HD), Instant-Play video advertisements that can be played
anywhere within your application. Video ads may require a brief waiting time on the first attempt to play
after which, the videos will play without any delay. AdColony also contains a secure system for
rewarding users with virtual currency upon the completion of video plays.</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>AdColony helps to create  high-definition (HD), Instant-Play video advertisements that can be played
anywhere within your application.</content>
            </document>
        </documents>
    </module>
    <module id="mod_urbanairship_2.3.0" name="UrbanAirShip" version="2.3.0" core="true" required="false" groupId="com.google.protobuf" artifactId="protobuf-java">
        <contentURL>/modules/tech-android-native/files/mod_urbanairship_2.3.0/2.3.0/mod_urbanairship_2.3.0-2.3.0.jar</contentURL>
		<imageUrl>images/tech-android-native/Urban-Airship.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>Urbanairship sends push notifications directly to people who have installed the app. Rich Push allows you to go beyond simple alerts by adding engaging experiences into your notifications. Add HTML, video, audio, maps and other rich media components to your push messages. Track delivery and message views, and allow your Rich Push messages to be kept in a persistent inbox located within your app.

Urban Airship primarily provides app developers the ability to easily add features such as creation and delivery of enhanced push notifications, in-app purchase and subscriptions, as well as reporting on the use of those features back to app developers. The company offers these services on Android, iOS, and BlackBerry.</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>Urban Airship sends push notifications to people who have installed the app.</content>
            </document>
        </documents>
    </module>
    <module id="mod_phonegap_1.2.0" name="PhoneGap" version="1.2.0" core="true" required="true" groupId="modules.tech-android-native.files" artifactId="mod_phonegap_1.2.0">
        <contentURL>/modules/tech-android-native/files/mod_phonegap_1.2.0/1.2.0/mod_phonegap_1.2.0-1.2.0.jar</contentURL>
        <documents>
            <document documentType="HELP_TEXT">
                <content>PhoneGap is an HTML5 app platform that allows you to author native applications with web technologies and get access to APIs and app stores.Even though user works on web based application[hybrid apps] while using phone gap user feel as if they are working on native applications.</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>PhoneGap is an HTML5 app platform that allows you to author native applications with web technologies and get access to APIs and app stores.</content>
            </document>
        </documents>
    </module>
    <module id="mod_commons_io_2.0" name="Commons IO" version="2.0" core="true" required="false" groupId="commons-io" artifactId="commons-io">
        <contentURL>/modules/tech-android-native/files/mod_commons_io_2.0/2.0/mod_commons_io_2.0-2.0.jar</contentURL>
        <documents>
            <document documentType="HELP_TEXT">
                <content>Commons IO is a library of utilities to assist with developing IO functionality.

There are six main areas included:

1)Utility classes - with static methods to perform common tasks.
2)Input - useful Input Stream and Reader implementations.
3)Output - useful Output Stream and Writer implementations.
4)Filters - various implementations of file filters.
5)Comparators - various implementations of java.util.Comparator for files.
6)File Monitor - a component for monitoring file system events.
</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>Commons IO is a library of utilities to assist with developing IO functionality.</content>
            </document>
        </documents>
    </module>
    <module id="mod_httpclient_3.1" name="HttpClient" version="3.1" core="true" required="false" groupId="Commons-httpclient" artifactId="commons-httpclient">
        <contentURL>/modules/tech-android-native/files/mod_httpclient_3.1/3.1/mod_httpclient_3.1-3.1.jar</contentURL>
        <documents>
            <document documentType="HELP_TEXT">
                <content>HTTP client is mainly used for retrieving data from server.HTTP stands for Hyper text transfer protocol.

Procedure to send Request :- 

First add the import statement import HTTPClient.*; to user file(s). Please create HTTPConnection  Requests can then be sent using one of the methods Head(), Get(), Post(), etc in HTTPConnection. These methods all return an instance of HTTP Response which has methods for accessing the response headers (getHeader(), getHeaderAsInt(), etc), various response info (getStatusCode(), getReasonLine(), etc), the response data (getData(), getText(), and getInputStream()) and any trailers that might have been sent (getTrailer(), getTrailerAsInt(), etc).</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>HTTP client is mainly used for retrieving data from server.HTTP stands for Hyper text transfer protocol.</content>
            </document>
        </documents>
    </module>
    <module id="mod_google_map_2.2_2.2" name="Google Map 2.2" version="2.2" core="true" required="false" groupId="modules.tech-android-native.files" artifactId="mod_google_map_2.2">
        <documents>
            <document documentType="HELP_TEXT">
                <content>POM was created by Sonatype Nexus</content>
            </document>
        </documents>
    </module>
    <module id="mod_google_map_2.3.3_2.3.3" name="Google Map 2.3.3" version="2.3.3" core="true" required="false" groupId="modules.tech-android-native.files" artifactId="mod_google_map_2.3.3">
        <documents>
            <document documentType="HELP_TEXT">
                <content>POM was created by Sonatype Nexus</content>
            </document>
        </documents>
    </module>
    <module id="mod_google_map_4.0.3_4.0.3" name="Google Map 4.0.3" version="4.0.3" core="true" required="false" groupId="modules.tech-android-native.files" artifactId="mod_google_map_4.0.3">
        <documents>
            <document documentType="HELP_TEXT">
                <content>POM was created by Sonatype Nexus</content>
            </document>
        </documents>
    </module>
    <module id="mod_contactslib_1.0.1" name="ContactsLib" version="1.0.1" core="true" required="false" groupId="modules.tech-android-native.files" artifactId="mod_contactslib_1.0.1">
        <contentURL>/modules/tech-android-native/files/mod_contactslib_1.0.1/1.0.1/mod_contactslib_1.0.1-1.0.1.jar</contentURL>
		<imageUrl>images/tech-android-native/ContactsLib.png</imageUrl>
        <documents>
            <document documentType="HELP_TEXT">
                <content>ContactsLib is an Android library for developers, wishing to work easily with Contacts,without knowing how a Content Provider operates.

This library provides methods to :
1. Get information about a contact
2. Search record by name, phone number or others attributes
3. Insert new contact in the Content Provider
4. Update contact's data
5. Delete a contact</content>
            </document>
            <document documentType="DESCRIPTION">
                <content>ContactsLib is an Android library for developers, wishing to work easily with Contacts.</content>
            </document>
        </documents>
    </module>
	<module id="mod_cordova_1.7.0" name="Cordova" version="1.7.0" core="true" required="false" groupId="modules.tech-android-native.files" artifactId="mod_cordova_1.7.0">
        <documents>
            <document documentType="HELP_TEXT">
                <content>POM was created by Sonatype Nexus</content>
            </document>
        </documents>
    </module>
	<module id="mod_commons_io_2.4" name="Commons IO" version="2.4" core="true" required="false" groupId="modules.tech-android-native.files" artifactId="mod_commons_io_2.4">
        <documents>
            <document documentType="HELP_TEXT">
                <content>POM was created by Sonatype Nexus</content>
            </document>
        </documents>
    </module>
</modules>
